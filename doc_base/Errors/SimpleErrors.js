// Generated by CoffeeScript 1.9.3
(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  mathJS.Errors.CalculationExceedanceError = (function(superClass) {
    extend(CalculationExceedanceError, superClass);

    function CalculationExceedanceError() {
      return CalculationExceedanceError.__super__.constructor.apply(this, arguments);
    }

    return CalculationExceedanceError;

  })(Error);

  mathJS.Errors.InvalidVariableError = (function(superClass) {
    extend(InvalidVariableError, superClass);

    function InvalidVariableError() {
      return InvalidVariableError.__super__.constructor.apply(this, arguments);
    }

    return InvalidVariableError;

  })(Error);

  mathJS.Errors.InvalidParametersError = (function(superClass) {
    extend(InvalidParametersError, superClass);

    function InvalidParametersError() {
      return InvalidParametersError.__super__.constructor.apply(this, arguments);
    }

    return InvalidParametersError;

  })(Error);

  mathJS.Errors.InvalidArityError = (function(superClass) {
    extend(InvalidArityError, superClass);

    function InvalidArityError() {
      return InvalidArityError.__super__.constructor.apply(this, arguments);
    }

    return InvalidArityError;

  })(Error);

  mathJS.Errors.NotImplementedError = (function(superClass) {
    extend(NotImplementedError, superClass);

    function NotImplementedError() {
      return NotImplementedError.__super__.constructor.apply(this, arguments);
    }

    return NotImplementedError;

  })(Error);

  mathJS.Errors.CycleDetectedError = (function(superClass) {
    extend(CycleDetectedError, superClass);

    function CycleDetectedError() {
      return CycleDetectedError.__super__.constructor.apply(this, arguments);
    }

    return CycleDetectedError;

  })(Error);

}).call(this);
