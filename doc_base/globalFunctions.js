// Generated by CoffeeScript 1.8.0
(function() {
  var __slice = [].slice,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.mixOf = function() {
    var Mixed, base, method, mixin, mixins, name, superClasses, _i, _ref;
    base = arguments[0], mixins = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
    Mixed = (function(_super) {
      __extends(Mixed, _super);

      function Mixed() {
        return Mixed.__super__.constructor.apply(this, arguments);
      }

      return Mixed;

    })(base);
    for (_i = mixins.length - 1; _i >= 0; _i += -1) {
      mixin = mixins[_i];
      for (name in mixin) {
        method = mixin[name];
        Mixed[name] = method;
      }
      _ref = mixin.prototype;
      for (name in _ref) {
        method = _ref[name];
        Mixed.prototype[name] = method;
      }
    }
    superClasses = Array.prototype.slice.call(arguments, 0);
    Mixed.prototype["instanceof"] = function(cls) {
      var c, _j, _len;
      if (this instanceof cls) {
        return true;
      }
      for (_j = 0, _len = superClasses.length; _j < _len; _j++) {
        c = superClasses[_j];
        if (c === cls) {
          return true;
        }
      }
      return false;
    };
    return Mixed;
  };

}).call(this);
