// Generated by CoffeeScript 1.9.3
(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  _mathJS.Evaluable = (function(superClass) {
    extend(Evaluable, superClass);

    function Evaluable() {
      return Evaluable.__super__.constructor.apply(this, arguments);
    }

    Evaluable.prototype["eval"] = function() {
      throw new mathJS.Errors.NotImplementedError("eval() in " + this.contructor.name);
    };

    return Evaluable;

  })(_mathJS.Interface);

}).call(this);
