// Generated by CoffeeScript 1.9.3
(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  _mathJS.Comparable = (function(superClass) {
    extend(Comparable, superClass);

    function Comparable() {
      return Comparable.__super__.constructor.apply(this, arguments);
    }


    /**
    * This method checks for mathmatical equality. This means new mathJS.Double(4.2).equals(4.2) is true.
    * @method equals
    * @param {Number} n
    * @return {Boolean}
    *
     */

    Comparable.prototype.equals = function(n) {
      throw new mathJS.Errors.NotImplementedError("equals in " + this.contructor.name);
    };

    Comparable.prototype.e = function() {
      return this.equals.apply(this, arguments);
    };

    return Comparable;

  })(_mathJS.Interface);

}).call(this);
